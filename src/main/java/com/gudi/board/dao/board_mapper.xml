<?xml version="1.0" encoding="UTF-8"?>
<!-- mapper 에 대한 선언 문 -->
<!DOCTYPE mapper PUBLIC
	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<!-- XML 이 어떤interface 와 연결이 되는가? -->
<mapper namespace="com.gudi.board.dao.BoardDAO">	
	
	<insert id="fbwrite"
		useGeneratedKeys="true"
		keyColumn="postId"
		keyProperty="postId"
		parameterType="board">
		INSERT INTO post(postId,title,postContent,postField,userId) 
		VALUES(post_seq.NEXTVAL,#{title},#{postContent},'post',#{userId})
	</insert>

	<insert id="fbfileWrite">
		INSERT INTO image(imgId, oriFileName, newFileName, postId,imgField,imgPath)
			VALUES(image_seq.NEXTVAL, #{param1},#{param2},#{param3},'post','C:/upload')
	</insert>
	
	
	<select id="fbdetail" parameterType="String" resultType="board">
		SELECT p.postid, p.title,p.userid, p.postcontent, p.postdate , p.userid, p.postfield, p.postdel, m.nickname
		FROM post  p  JOIN MEMBERS m ON p.USERID =m.USERID WHERE postId = #{postId}  AND postDel = 'N'		
	</select>
	
	
	<select id="fileList" parameterType="String" resultType="file">
		SELECT imgId, oriFileName, newFileName, postId 
			FROM image WHERE postId = #{postId} ORDER BY imgId
	</select>
	
	<update id="fbupdate" parameterType="hashmap">
	  UPDATE post SET title = #{title}, postContent = #{postContent},nickName=#{nickName} 
	  WHERE postId = #{postId}
	</update>
	
	
	
	
	
	<update id="fbdel" parameterType="String">
	UPDATE post SET postDel = 'Y' WHERE postId = #{postId}
    </update>
	
	<insert id="fbcmtwrite" parameterType="board">
	INSERT INTO comments(cmtId, cmtContent,postId,cmtField,userId) VALUES(comment_seq.NEXTVAL,#{cmtContent},#{postId},#{cmtField}, #{userId})
	
	</insert>
	
	<update id="fbfileupdate">
	  UPDATE image SET oriFileName = #{oriFileName}, newFileName = #{newFileName}
	  WHERE postId = #{postId}
	</update>
	
	
	
     <select id="list" resultType="board">
		SELECT * FROM
(SELECT ROW_NUMBER() OVER (ORDER BY u.cmtdate DESC) rnum, u.*
FROM (SELECT c.cmtId, c.cmtContent, c.cmtDate, c.userId, (SELECT nickName FROM members WHERE userId=c.userId) nickName 
FROM (SELECT cmtId, cmtContent, cmtDate, userId, isDel,postId,  cmtField FROM comments) c
WHERE cmtField = 'Fbpost' AND postId =#{param3} AND isDel = 'N') u)
WHERE rnum BETWEEN #{param1} AND #{param2}
	</select> 


	<select id="allCount" resultType="int">
		SELECT COUNT(cmtId) FROM comments
	</select>
   
   <update id="fbcmtupdate">
		UPDATE comments SET cmtContent = #{cmtContent} 
			WHERE cmtId = #{cmtId}
	</update>
    
    
    <update id="inform">
		UPDATE inform SET isRead='Y' WHERE userId=#{param1}
	</update>
	
	<update id="fbcmtDel" parameterType="board" >
	UPDATE comments SET isDel = 'Y' WHERE cmtId = #{cmtId}
    </update>
	
	
	<select id="fbTotalCount" resultType="int">
	  <![CDATA[
		SELECT count(postid) FROM  post WHERE postid >0  AND postdel ='N'
	  ]]>
	</select>
	
	
	<select id="fbList" resultType="map">      
        <![CDATA[    
        SELECT * FROM
        (
            SELECT rn, postid , title, postdate, userid, postfield, postdel, nickname FROM 
           	(
            	SELECT  rownum AS rn , A.postid, A.title, A.postdate, A.userid, A.postfield, A.postdel , m.nickname FROM 
            		( SELECT * FROM post   WHERE postdel ='N' ORDER BY postid DESC ) A   JOIN  members m             	
            	ON a.userid =m.userid                
          	)ORDER  BY rn ASC 
		)		
		WHERE rn BETWEEN  #{pageBegin} AND #{pageEnd}                 
        ]]>
                 
    </select>
 
	
	<select id="fbcmtTotalCount" resultType="int">
		SELECT count(cmtid) FROM comments WHERE isdel ='N' AND postid =#{postId}
	</select>
	
	<select id="fbcmtlist"  resultType="map"> 
		SELECT * FROM
        (
            SELECT rn, cmtid, cmtcontent, TO_CHAR(cmtdate ,'YYYY-MM-DD') AS CMTDATE, isdel, cmtfield, postid, userid, nickname FROM 
           	(
            	SELECT  rownum AS rn , A.cmtid, A.cmtcontent, A.cmtdate, A.isdel, A.cmtfield, A.postid, A.userid , m.nickname FROM 
            		( SELECT * FROM comments   WHERE isdel ='N'  AND  postid =#{postId}  ORDER BY cmtid DESC ) A   JOIN  members m             	
            	ON a.userid =m.userid                
          	)ORDER  BY rn ASC 
		)	
		WHERE rn BETWEEN  #{pageBegin} AND #{pageEnd}   			
	</select>
	
	
	<select id="getComment"  resultType="map"> 
		SELECT * FROM comments WHERE  cmtid =#{cmtId}
	</select>
	
	<select id="alarmSendUserList"  resultType="String"> 
	SELECT DISTINCT userid FROM COMMENTS WHERE  isdel ='N' AND POSTID =#{postId}  AND USERID !=#{userId} 
	</select>
	
	
	<delete id="alarmDelete">
		DELETE FROM INFORM WHERE INFORMID=#{informid}	
	</delete>
	
</mapper>
